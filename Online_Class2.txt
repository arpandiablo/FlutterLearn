*****************************************************************
class _MyHomePageState extends State<MyHomePage> {
   final _formKey = GlobalKey<FormState>();
*****************************************************************


Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              TextFormField(
          decoration: InputDecoration(
          hintText: 'Name',
              border: OutlineInputBorder(),
              contentPadding: EdgeInsets.all(40),
              filled: true,
              fillColor: Colors.blue.shade100,
              prefixIcon: Icon(Icons.mail),),
                // The validator receives the text that the user has entered.
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter some text';
                  }
                  return null;
                },
              ),
              Padding(
                padding: const EdgeInsets.symmetric(vertical: 16.0),
                child: ElevatedButton(
                  onPressed: () {
                    // Validate returns true if the form is valid, or false otherwise.
                    if (_formKey.currentState!.validate()) {
                      // If the form is valid, display a snackbar. In the real world,
                      // you'd often call a server or save the information in a database.
                      ScaffoldMessenger.of(context).showSnackBar(
                        const SnackBar(content: Text('Valid Input')),
                      );
                    }
                  },
                  child: const Text('Submit'),
                ),
              ),
            ],
          ),
        ),